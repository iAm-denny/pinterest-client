[{"D:\\Programming\\projects\\pinterest-clone\\client\\src\\index.js":"1","D:\\Programming\\projects\\pinterest-clone\\client\\src\\App.js":"2","D:\\Programming\\projects\\pinterest-clone\\client\\src\\components\\Navbar.js":"3","D:\\Programming\\projects\\pinterest-clone\\client\\src\\components\\Home.js":"4","D:\\Programming\\projects\\pinterest-clone\\client\\src\\components\\Login.js":"5","D:\\Programming\\projects\\pinterest-clone\\client\\src\\components\\User.js":"6","D:\\Programming\\projects\\pinterest-clone\\client\\src\\components\\Detail.js":"7","D:\\Programming\\projects\\pinterest-clone\\client\\src\\gql\\queries.js":"8","D:\\Programming\\projects\\pinterest-clone\\client\\src\\components\\Post.js":"9","D:\\Programming\\projects\\pinterest-clone\\client\\src\\Helper\\Context.js":"10"},{"size":285,"mtime":1606473064045,"results":"11","hashOfConfig":"12"},{"size":1425,"mtime":1606540907511,"results":"13","hashOfConfig":"12"},{"size":2548,"mtime":1606543534112,"results":"14","hashOfConfig":"12"},{"size":1244,"mtime":1606542558923,"results":"15","hashOfConfig":"12"},{"size":2788,"mtime":1606540961367,"results":"16","hashOfConfig":"12"},{"size":1591,"mtime":1606473419452,"results":"17","hashOfConfig":"12"},{"size":3546,"mtime":1606542613425,"results":"18","hashOfConfig":"12"},{"size":1246,"mtime":1606471166270,"results":"19","hashOfConfig":"12"},{"size":1351,"mtime":1606541452614,"results":"20","hashOfConfig":"12"},{"size":134,"mtime":1606540844309,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ns7wog",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"D:\\Programming\\projects\\pinterest-clone\\client\\src\\index.js",[],["50","51"],"D:\\Programming\\projects\\pinterest-clone\\client\\src\\App.js",[],"D:\\Programming\\projects\\pinterest-clone\\client\\src\\components\\Navbar.js",["52","53","54","55"],"import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { LoginContext, UserContext } from '../Helper/Context'\r\nimport { useContext } from \"react\";\r\n\r\nfunction Navbar() {\r\n  const { loggedIn, setLoggedIn } = useContext(LoginContext)\r\n  const { userProfile, setUserProfile } = useContext(UserContext)\r\n  const cookies = new Cookies();\r\n  \r\n  const logout = () => {\r\n    cookies.remove(\"userid\");\r\n    window.location.href = \"/login\";\r\n    sessionStorage.removeItem(\"userImg\");\r\n    sessionStorage.removeItem(\"loggedIn\");\r\n    setLoggedIn(false)\r\n  };\r\n  return (\r\n    <header>\r\n      <div className=\"first\">\r\n        <svg\r\n          className=\"gUZ lZJ U9O kVc\"\r\n          height=\"24\"\r\n          width=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          aria-hidden=\"true\"\r\n          aria-label=\"\"\r\n          role=\"img\"\r\n        >\r\n          <path d=\"M0 12c0 5.123 3.211 9.497 7.73 11.218-.11-.937-.227-2.482.025-3.566.217-.932 1.401-5.938 1.401-5.938s-.357-.715-.357-1.774c0-1.66.962-2.9 2.161-2.9 1.02 0 1.512.765 1.512 1.682 0 1.025-.653 2.557-.99 3.978-.281 1.189.597 2.159 1.769 2.159 2.123 0 3.756-2.239 3.756-5.471 0-2.861-2.056-4.86-4.991-4.86-3.398 0-5.393 2.549-5.393 5.184 0 1.027.395 2.127.889 2.726a.36.36 0 0 1 .083.343c-.091.378-.293 1.189-.332 1.355-.053.218-.173.265-.4.159-1.492-.694-2.424-2.875-2.424-4.627 0-3.769 2.737-7.229 7.892-7.229 4.144 0 7.365 2.953 7.365 6.899 0 4.117-2.595 7.431-6.199 7.431-1.211 0-2.348-.63-2.738-1.373 0 0-.599 2.282-.744 2.84-.282 1.084-1.064 2.456-1.549 3.235C9.584 23.815 10.77 24 12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12\"></path>\r\n        </svg>\r\n        <div>\r\n          <Link to=\"/\">Home</Link>\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"second\">\r\n        <input type=\"text\" name=\"\" placeholder=\"Search\" />\r\n      </div> */}\r\n      <div>\r\n        {loggedIn === true  ? (\r\n          <>\r\n            <Link to=\"/user\">\r\n              <img\r\n                src={userProfile ? userProfile : null}\r\n                width=\"40px\"\r\n                height=\"40px\"\r\n                style={{ borderRadius: \"50%\" }}\r\n              />\r\n            </Link>\r\n\r\n            <Link to=\"/login\" onClick={logout} className=\"logout\">\r\n              Logout\r\n            </Link>\r\n           \r\n\r\n          </>\r\n        ) : (\r\n          <Link to=\"/login\" style={{textDecoration:\"none\", marginTop: \"50px\", marginRight:\"100px\"}}>Login</Link>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","D:\\Programming\\projects\\pinterest-clone\\client\\src\\components\\Home.js",["56"],"import { Link, withRouter } from \"react-router-dom\";\r\nimport { images } from \"../gql/queries\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { LoginContext } from '../Helper/Context'\r\nimport { useContext } from \"react\";\r\n\r\nfunction Home() {\r\n  const { data, error, loading } = useQuery(images);\r\n  const { loggedIn, setLoggedIn } = useContext(LoginContext)\r\n  console.log(data);\r\n  function displayImg() {\r\n    if (error) {\r\n      console.log(error);\r\n    }\r\n    if (loading) {\r\n      return <div className=\"loading\"></div>;\r\n    }\r\n    if (data) {\r\n      return data.images.map((img) => {\r\n        return <Image item={img} key={img.id} />;\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n  <>\r\n    <div className=\"img-container\">\r\n      {displayImg()}\r\n      {\r\n        loggedIn && <div className=\"createPost\"><Link to='/post'>+</Link></div>\r\n      }\r\n     \r\n    </div>\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(Home);\r\n\r\nfunction Image({ item }) {\r\n  console.log(item.userid);\r\n  return (\r\n    <Link to={{ pathname: `/pin/${item.id}/${item.userid}` }}>\r\n      <div className=\"img\">\r\n        <img src={item.image} alt=\"\" />\r\n        <div>\r\n          <i className=\"fas fa-heart\"></i>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","D:\\Programming\\projects\\pinterest-clone\\client\\src\\components\\Login.js",["57","58"],"import FacebookLogin from \"react-facebook-login\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { UserLogin } from \"../gql/queries\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { LoginContext,UserContext } from '../Helper/Context'\r\nimport { useContext } from \"react\";\r\n\r\nfunction Login(props) {\r\n  const { loggedIn, setLoggedIn } = useContext(LoginContext)\r\n  const { userProfile, setUserProfile } = useContext(UserContext)\r\n\r\n  const [loginMut] = useMutation(UserLogin);\r\n\r\n  const cookies = new Cookies();\r\n\r\n  const responseFacebook = (response) => {\r\n    const getCookie = cookies.get(\"userid\");\r\n    if (getCookie) {\r\n      cookies.remove(\"userid\");\r\n    }\r\n\r\n    loginMut({\r\n      variables: {\r\n        name: response.name,\r\n        email: response.email,\r\n        profileImage: response.picture.data.url,\r\n      },\r\n    })\r\n      .then((user) => {\r\n        cookies.set(\"userid\", user.data.user.id);\r\n        window.sessionStorage.setItem(\"userImg\", user.data.user.profileImage);\r\n        window.sessionStorage.setItem(\"loggedIn\", true);\r\n        props.history.push(\"/\");\r\n        setLoggedIn(true)\r\n        setUserProfile(window.sessionStorage.getItem(\"userImg\"))\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const responseGoogle = (response) => {\r\n    const getCookie = cookies.get(\"userid\");\r\n    if (getCookie) {\r\n      cookies.remove(\"userid\");\r\n    }\r\n\r\n    loginMut({\r\n      variables: {\r\n        name: response.profileObj.name,\r\n        email: response.profileObj.email,\r\n        profileImage: response.profileObj.imageUrl,\r\n      },\r\n    })\r\n      .then((user) => {\r\n        cookies.set(\"userid\", user.data.user.id);\r\n        sessionStorage.setItem(\"userImg\", user.data.user.profileImage);\r\n        sessionStorage.setItem(\"loggedIn\", \"true\");\r\n        setLoggedIn(true)\r\n        props.history.push(\"/\");\r\n        setUserProfile(window.sessionStorage.getItem(\"userImg\"))\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"loginForm\">\r\n        <h1>Login in with</h1>\r\n        <div className=\"fb_login\">\r\n          <FacebookLogin\r\n            appId=\"449720276049010\"\r\n            autoLoad={true}\r\n            fields=\"name,email,picture\"\r\n            callback={responseFacebook}\r\n            textButton=\"Facebook\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <GoogleLogin\r\n            clientId=\"918645088712-8gm5aodfiekhjcqud8fio1nom2sqvang.apps.googleusercontent.com\"\r\n            buttonText=\"Login\"\r\n            onSuccess={responseGoogle}\r\n            onFailure={responseGoogle}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","D:\\Programming\\projects\\pinterest-clone\\client\\src\\components\\User.js",["59","60"],"import React from \"react\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { user, specificUserImage } from \"../gql/queries\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nfunction User() {\r\n  const cookies = new Cookies();\r\n  const { data } = useQuery(user, { variables: { id: cookies.get(\"userid\") } });\r\n  const { data: dataImg } = useQuery(specificUserImage, {\r\n    variables: { id: cookies.get(\"userid\") },\r\n  });\r\n  if (data) {\r\n    console.log(data);\r\n  }\r\n  if (dataImg) {\r\n    console.log(dataImg);\r\n  }\r\n  function displayUserProfile() {\r\n    if (data) {\r\n      return (\r\n        <div className=\"profile\">\r\n          <div>\r\n            <img src={data.user.profileImage} width=\"120px\" />\r\n          </div>\r\n          <div>\r\n            <h1>{data.user.name}</h1>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  function displayImg() {\r\n    if (dataImg) {\r\n      return (\r\n        <>\r\n          <h2>My pin</h2>\r\n          <div className=\"mypins\">\r\n            {dataImg.specificUserImage.map((img) => {\r\n              return (\r\n                <div>\r\n                  <img src={img.image} width=\"200px\" height=\"auto\" />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"pins\">\r\n\r\n        {\r\n          cookies.get(\"userid\") ? (\r\n            <>\r\n            {displayUserProfile()}\r\n            {displayImg()}\r\n            </>\r\n          ): (\r\n            <div>Go login first</div>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","D:\\Programming\\projects\\pinterest-clone\\client\\src\\components\\Detail.js",["61"],"import { specificImage, user, like } from \"../gql/queries\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport Cookies from \"universal-cookie\";\r\nimport moment from \"moment\";\r\nimport Base64Downloader from \"react-base64-downloader\";\r\n\r\nfunction Detail(props) {\r\n  const cookies = new Cookies();\r\n  const getCookie = cookies.get(\"userid\");\r\n\r\n  const [likeMut] = useMutation(like);\r\n\r\n  const { data, loading } = useQuery(specificImage, {\r\n    variables: { id: props.match.params.id },\r\n  });\r\n  function LikeOrNot() {\r\n    if (data) {\r\n      const liked = data.specificImage.likes.find(like => {\r\n        if(like.userid === getCookie) {\r\n          return true\r\n        }\r\n        else {\r\n          return false\r\n        }\r\n      })\r\n      if(liked) {\r\n        return \"fas fa-heart active\"\r\n      }else {\r\n        return \"fas fa-heart \"\r\n      }\r\n    }    \r\n  }\r\n\r\n\r\n  const { data: userData } = useQuery(user, {\r\n    variables: { id: props.match.params.userid },\r\n  });\r\n\r\n  const likeimage = (e) => {\r\n    e.preventDefault();\r\n    likeMut({\r\n      variables: {\r\n        imageid: props.match.params.id,\r\n        userid: cookies.get(\"userid\"),\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: specificImage,\r\n          variables: { id: props.match.params.id },\r\n        },\r\n      ],\r\n    })\r\n      .then(() => console.log(\"Liked\"))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  function displayImage() {\r\n    console.log(data);\r\n    if (loading) {\r\n      return <div className=\"loading\"></div>;\r\n    }\r\n    if (data) {\r\n      const base64 = data.specificImage.image;\r\n      console.log(data.specificImage.createdAt)\r\n      return (\r\n        <div className=\"pin-container\">\r\n          <div className=\"image\">\r\n            <img src={data.specificImage.image} alt=\"\" />\r\n          </div>\r\n          <div className=\"right-side\">\r\n            <div className=\"right-side-user\">\r\n              <div>\r\n                <img src={userData ? userData.user.profileImage : \"\"} alt=\"\" />\r\n              </div>\r\n              <div className=\"download-user\">\r\n                <div>\r\n  \r\n                  <span>{moment().calendar(data.specificImage.createdAt.toString())}</span>\r\n                </div>\r\n                <div className=\"download-btn\">\r\n                  <Base64Downloader\r\n                    base64={base64}\r\n                    downloadName={props.match.params.id}\r\n                    style={{\r\n                      backgroundColor: \"blue\",\r\n                      color: \"#fff\",\r\n                      backgroundColor: \"#e60023\",\r\n                      padding: \"15px 25px\",\r\n                      borderRadius: \"25px\",\r\n                      border: \"none\",\r\n                      cursor: \"pointer\",\r\n                      fontFamily: \"Poppins, sans-serif\",\r\n                      outline: \"none\",\r\n                    }}\r\n                  >\r\n                    Download\r\n                  </Base64Downloader>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"like-btn\">\r\n              <p>{data.specificImage.likes.length} People liked this </p>\r\n              {\r\n                getCookie ? (\r\n                  <>\r\n                  <i className={LikeOrNot()} onClick={likeimage}></i>\r\n                  <span>{data.specificImage.likes.userid}</span>\r\n                  </>\r\n                ):  \"\"\r\n              }\r\n \r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return <>{displayImage()}</>;\r\n}\r\n\r\nexport default Detail;\r\n","D:\\Programming\\projects\\pinterest-clone\\client\\src\\gql\\queries.js",[],"D:\\Programming\\projects\\pinterest-clone\\client\\src\\components\\Post.js",["62"],"import { useState, useEffect } from \"react\";\r\nimport Cookies from \"universal-cookie\";\r\nimport FileBase64 from \"react-file-base64\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { post, images } from \"../gql/queries\";\r\n\r\nfunction Post(props) {\r\n  const [image, setImage] = useState(\"\");\r\n  const [addImageMut] = useMutation(post);\r\n  const cookies = new Cookies();\r\n  const userid = cookies.get(\"userid\");\r\n\r\n  const submitHandle = (e) => {\r\n    e.preventDefault();\r\n    addImageMut({\r\n      variables: {\r\n        userid,\r\n        image,\r\n      },\r\n      \r\n        refetchQueries: [{\r\n          query: images\r\n        }]\r\n      \r\n    })\r\n    .then(() => {\r\n      props.history.push(\"/\")\r\n\r\n     })\r\n    .catch(err => console.log(err))\r\n  };\r\n  return (\r\n    <div >\r\n      {\r\n        userid ? (\r\n          <form onSubmit={submitHandle} className=\"post\">\r\n            <div>\r\n            <FileBase64\r\n            multiple={false}\r\n            onDone={({ base64 }) => setImage(base64)}\r\n          />\r\n          <div className=\"img\"><img src={image} alt=\"\"/></div>\r\n          \r\n            </div>\r\n\r\n          <div className=\"submit\">\r\n          <button>Submit</button>\r\n          </div>\r\n          \r\n        </form>\r\n        )\r\n        : (\r\n          <div>Go login Frist</div>\r\n        )\r\n\r\n      }\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","D:\\Programming\\projects\\pinterest-clone\\client\\src\\Helper\\Context.js",[],["63","64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":10,"nodeType":"71","messageId":"72","endLine":1,"endColumn":19},{"ruleId":"69","severity":1,"message":"73","line":1,"column":21,"nodeType":"71","messageId":"72","endLine":1,"endColumn":29},{"ruleId":"69","severity":1,"message":"74","line":9,"column":24,"nodeType":"71","messageId":"72","endLine":9,"endColumn":38},{"ruleId":"75","severity":1,"message":"76","line":44,"column":15,"nodeType":"77","endLine":49,"endColumn":17},{"ruleId":"69","severity":1,"message":"78","line":9,"column":21,"nodeType":"71","messageId":"72","endLine":9,"endColumn":32},{"ruleId":"69","severity":1,"message":"79","line":11,"column":11,"nodeType":"71","messageId":"72","endLine":11,"endColumn":19},{"ruleId":"69","severity":1,"message":"80","line":12,"column":11,"nodeType":"71","messageId":"72","endLine":12,"endColumn":22},{"ruleId":"75","severity":1,"message":"76","line":23,"column":13,"nodeType":"77","endLine":23,"endColumn":63},{"ruleId":"75","severity":1,"message":"76","line":41,"column":19,"nodeType":"77","endLine":41,"endColumn":70},{"ruleId":"81","severity":1,"message":"82","line":87,"column":23,"nodeType":"83","messageId":"84","endLine":87,"endColumn":38},{"ruleId":"69","severity":1,"message":"70","line":1,"column":20,"nodeType":"71","messageId":"72","endLine":1,"endColumn":29},{"ruleId":"65","replacedBy":"85"},{"ruleId":"67","replacedBy":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'setUserProfile' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setLoggedIn' is assigned a value but never used.","'loggedIn' is assigned a value but never used.","'userProfile' is assigned a value but never used.","no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","unexpected",["87"],["88"],"no-global-assign","no-unsafe-negation"]